@page "/students/create"
@inject VCard.Data.StudentDbContext DB
@using VCard.Model
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Student</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Student" OnValidSubmit="AddStudent" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Student.Name" class="form-control" /> 
                <ValidationMessage For="() => Student.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="birthdate" class="form-label">Birthdate:</label> 
                <InputDate id="birthdate" @bind-Value="Student.Birthdate" class="form-control" /> 
                <ValidationMessage For="() => Student.Birthdate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="gender" class="form-label">Gender:</label> 
                <InputText id="gender" @bind-Value="Student.Gender" class="form-control" /> 
                <ValidationMessage For="() => Student.Gender" class="text-danger" /> 
            </div>
            <div class="mb-3">
                <label for="picture" class="form-label">Picture:</label>
                <InputFile id="picture" OnChange="OnInputFileChange" class="form-control" />
                <ValidationMessage For="() => Student.PictureUrl" class="text-danger" />
            </div>

            @if (!string.IsNullOrEmpty(Student.PictureUrl))
            {
                <div class="mb-3">
                    <label>Selected Picture:</label>
                    <br />
                    <img src="@Student.PictureUrl" alt="Selected Picture" style="max-width: 200px; max-height: 200px;" />
                </div>
            }


            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/">Back to List</a>
</div>


@code {

    [SupplyParameterFromForm]
    public Student Student { get; set; } = new();

    private string base64String;
    private string ErrorMessage { get; set; }
    private IBrowserFile? selectedFile;

    private string imageBase64;

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var file = e.File; // Assuming you're only allowing a single file, adjust as necessary
        if (file != null)
        {
            using var memoryStream = new MemoryStream();
            await file.OpenReadStream().CopyToAsync(memoryStream);
            imageBase64 = $"data:image/png;base64,{Convert.ToBase64String(memoryStream.ToArray())}";

            Student.PictureUrl = imageBase64;
        }
    }



    public async Task AddStudent()
    {
        DB.Students.Add(Student);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/");
    }

}
